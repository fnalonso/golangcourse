/*
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package main

import (
	"fmt"
)

func main() {
	fmt.Println(fibonacciEvenSum(4000000))
}

func fibonacciEvenSum(maxValue int) int {
	var f = []int{1, 1}
	var sum int = 2
	for id := 2; id <= len(f); id++ {
		f = append(f, f[id-1]+f[id-2])
		fmt.Println(f[id])

		if f[id] >= maxValue {
			break
		}

		if f[id]%2 != 0 {
			sum += f[id]
		}

	}

	return sum
}
